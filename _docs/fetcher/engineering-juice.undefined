**`createFetcher({ baseUrl }: FetchOptions)`**
- Input: Object with property `baseUrl` of type `string`.
- Output: Returns an object with functions `get`, `post`, `getStatus`.
- Description: Creates and returns an object with functions to make API requests with the specified base URL.

**`get<Type>(endpoint: string): Promise<Type>`**
- Input: String `endpoint`.
- Output: Promise resolving to a value of type `Type`.
- Description: Makes a GET request to the specified endpoint and returns the parsed response.

**`post<Type>({ endpoint, params, headers }): Promise<Type>`**
- Input: Object with optional properties `endpoint` of type `string`, `params` of any type, and `headers` of type `Record<string, any>`.
- Output: Promise resolving to a value of type `Type`.
- Description: Makes a POST request to the specified endpoint with the given params and headers, and returns the parsed response.

**`getStatus<Type>(endpoint: string): Promise<Type>`**
- Input: String `endpoint`.
- Output: Promise resolving to a value of type `Type`.
- Description: Makes a HEAD request to the specified endpoint and returns the parsed response.

**`handleResponse<Type>(response: Response): Promise<Type>`**
- Input: `Response` object.
- Output: Promise resolving to a value of type `Type`.
- Description: Handles the given response and returns the parsed response data, or throws an error if the response is not OK.