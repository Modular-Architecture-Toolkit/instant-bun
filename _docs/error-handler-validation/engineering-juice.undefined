## Functions

### `getErrorType(error: Error | CustomError): ErrorType`

Get the error type from the given error instance.

- `error`: `Error | CustomError` - The error instance from which to get the error type.
- **Returns**: `ErrorType` - The type of the error.

### `handleError(error: Error | CustomError, throwError = false): CustomError | undefined`

Handle the given error instance and throw an error if specified.

- `error`: `Error | CustomError` - The error instance to handle.
- `throwError`: `(optional) boolean` - Whether or not to throw an error if an error occurs. Defaults to `false`.
- **Returns**: `CustomError | undefined` - The custom error object with type and message properties.

### `createValidator<Schema extends SchemaType>(schema: Schema)`

Create a validator function based on the given schema.

- `schema`: `Schema` - The schema used to validate the data.
- **Returns**: `{ validateAgainstArraySchema: (schema: Schema, data: unknown[]) => ValidationResult<Schema>; validateItem: (item: unknown) => TypeInference<Schema>; }` - An object containing `validateAgainstArraySchema` and `validateItem` methods.